{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["// const elements = {\n//   content: document.querySelector('.js-content'),\n//   text: document.querySelector('.js-text'),\n// };\n\n// const { esbuildVersion } = require('vite');\n\n// let count = 10;\n// elements.text.textContent = `Залишилось ${count} sec`;\n\n// const id = setInterval(() => {\n//   count -= 1;\n//   elements.text.textContent = `Залишилось ${count} sec`;\n//   if (count === 0) {\n//     clearInterval(id);\n//     elements.text.style.display = 'none';\n//   }\n// }, 1000);\n\n// setTimeout(() => {\n//   clearInterval(id);\n//   elements.text.style.display = 'none';\n// }, count * 1000);\n//TODO:\n// setTimeout(() => {\n//   console.log('hello');\n// }, 0);\n// console.time('for');\n\n// for (let i = 0; i < 10000; i++) {\n//   console.log(i);\n// }\n// for (let i = 0; i < 10000; i++) {\n//   console.log(i);\n// }\n// console.timeEnd('for');\n//TODO:\n// const currentDate = new Date();\n// console.log(currentDate);\n\n// const elements = {};\n\n// TODO: Promise\n\n// const promise = new Promise((res, rej) => {\n//   const random = Math.random();\n\n//   if (random > 0.5) {\n//     res({ name: 'Alice' });\n//   } else {\n//     rej('Error');\n//   }\n// });\n\n// console.log(promise);\n\n// promise\n//   .then(data => {\n//     console.log(data);\n//   })\n//   .catch(err => {\n//     console.log('err');\n//   })\n//   .finally(() => {\n//     console.log('done promise');\n//   });\n\n// for (let i = 0; i < 10000; i++) {\n//   console.log(i);\n// }\n// TODO: Practice create Casino spin\nimport * as basicLightbox from 'basiclightbox';\nconst selectors = {\n  spinBtn: document.querySelector('.js-start'),\n  container: document.querySelector('.js-container'),\n};\n\nselectors.spinBtn.addEventListener('click', handlerStart);\n\nfunction handlerStart() {\n  const promises = [...selectors.container.children].map(_ => createPromise());\n\n  Promise.allSettled(promises).then(items => {\n    items.forEach((item, idx) => {\n      selectors.container.children[idx].textContent = '';\n      setTimeout(() => {\n        selectors.container.children[idx].textContent =\n          item.value || item.reason;\n\n        if (idx === items.length - 1) {\n          const instance = basicLightbox.create(\n            `<h1>${isWinner ? 'Winner' : 'Loser'}</h1>`\n          );\n          instance.show();\n        }\n      }, 1000 * (idx + 1));\n    });\n    const isWinner =\n      items.every(item => item.status === 'fulfilled') ||\n      items.every(item => item.status === 'rejected');\n  });\n}\n\nfunction createPromise() {\n  return new Promise((res, rej) => {\n    const random = Math.random();\n    if (random > 0.5) {\n      res('🤩');\n    } else {\n      rej('👺');\n    }\n  });\n}\n"],"names":["selectors","handlerStart","promises","_","createPromise","items","item","idx","basicLightbox.create","isWinner","res","rej"],"mappings":"svBAwEA,MAAMA,EAAY,CAChB,QAAS,SAAS,cAAc,WAAW,EAC3C,UAAW,SAAS,cAAc,eAAe,CACnD,EAEAA,EAAU,QAAQ,iBAAiB,QAASC,CAAY,EAExD,SAASA,GAAe,CACtB,MAAMC,EAAW,CAAC,GAAGF,EAAU,UAAU,QAAQ,EAAE,IAAIG,GAAKC,EAAa,CAAE,EAE3E,QAAQ,WAAWF,CAAQ,EAAE,KAAKG,GAAS,CACzCA,EAAM,QAAQ,CAACC,EAAMC,IAAQ,CAC3BP,EAAU,UAAU,SAASO,CAAG,EAAE,YAAc,GAChD,WAAW,IAAM,CACfP,EAAU,UAAU,SAASO,CAAG,EAAE,YAChCD,EAAK,OAASA,EAAK,OAEjBC,IAAQF,EAAM,OAAS,GACRG,EAAoB,OACnC,OAAOC,EAAW,SAAW,OAAO,OAChD,EACmB,KAAI,CAEhB,EAAE,KAAQF,EAAM,EAAE,CACzB,CAAK,EACD,MAAME,EACJJ,EAAM,MAAMC,GAAQA,EAAK,SAAW,WAAW,GAC/CD,EAAM,MAAMC,GAAQA,EAAK,SAAW,UAAU,CACpD,CAAG,CACH,CAEA,SAASF,GAAgB,CACvB,OAAO,IAAI,QAAQ,CAACM,EAAKC,IAAQ,CAChB,KAAK,SACP,GACXD,EAAI,IAAI,EAERC,EAAI,IAAI,CAEd,CAAG,CACH"}